/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jdbcConnection.Connector;

/**
 *
 * @author USER
 */
public class Debit extends javax.swing.JInternalFrame {

 String mon;
    public Debit() {
        initComponents();
        this.setBorder((javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0)));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        damount = new javax.swing.JTextField();
        ddate = new com.toedter.calendar.JDateChooser();
        cmbpurpose = new javax.swing.JComboBox<String>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtdetails = new javax.swing.JTextArea();
        save = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        update = new javax.swing.JButton();
        table = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        serial = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbmonth = new javax.swing.JComboBox<String>();
        jLabel8 = new javax.swing.JLabel();
        cmbyear = new javax.swing.JComboBox<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        debitTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        month = new javax.swing.JButton();
        year = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(973, 770));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(980, 810));

        jPanel2.setBackground(new java.awt.Color(27, 90, 109));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Amount :");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DebitDate :");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Purpose :");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Details :");

        ddate.setDateFormatString("yyyy-MM-dd");

        cmbpurpose.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        cmbpurpose.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Debit Purpose--", "Teacher Payment", "Office Equipments", "Conveyance", "Office Rent", "Monthly Bills", "Entertainment", "Others" }));

        txtdetails.setColumns(20);
        txtdetails.setRows(5);
        jScrollPane1.setViewportView(txtdetails);

        save.setBackground(new java.awt.Color(0, 153, 51));
        save.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        save.setText("ADD");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(0, 153, 51));
        reset.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(0, 153, 51));
        update.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        table.setBackground(new java.awt.Color(0, 153, 51));
        table.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        table.setText("View Debit List");
        table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Srl_no :");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo/icons8-debit-card-80.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Month :");

        cmbmonth.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        cmbmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Month--", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Year :");

        cmbyear.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        cmbyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Year--", "2030", "2029", "2028", "2027", "2026", "2025", "2024", "2023", "2022", "2021", "2020", "2019", "2018", " " }));
        cmbyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbyearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbyear, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(update))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(save)
                        .addGap(140, 140, 140)
                        .addComponent(reset))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(table))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ddate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(serial, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addComponent(damount))
                            .addComponent(cmbpurpose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(damount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(ddate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbpurpose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cmbyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(update)
                    .addComponent(reset))
                .addGap(34, 34, 34)
                .addComponent(table)
                .addGap(69, 69, 69))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        debitTable.setBackground(new java.awt.Color(102, 102, 102));
        debitTable.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        debitTable.setForeground(new java.awt.Color(255, 255, 255));
        debitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Srl_no", "Amount", "DebitDate", "Purpose", "Details", "Month", "Year"
            }
        ));
        debitTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        debitTable.setRowHeight(20);
        debitTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                debitTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(debitTable);

        jPanel4.setBackground(new java.awt.Color(27, 90, 109));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        month.setBackground(new java.awt.Color(0, 153, 0));
        month.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        month.setText("View Monthly Summary");
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        year.setBackground(new java.awt.Color(0, 153, 0));
        year.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        year.setText("View Yearly Summary");
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(month)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addComponent(year)
                .addGap(43, 43, 43))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(month)
                    .addComponent(year))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 740));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = Connector.getConnection();
            String query = "insert into debitlist(Srl_no,Amount,DebitDate,Purpose,Details,Month,Year)values(?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(query);
              pst.setString(1, serial.getText());
            pst.setString(2, damount.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String datee = sdf.format(ddate.getDate());
            pst.setString(3, datee);
            String prs;
            prs = cmbpurpose.getSelectedItem().toString();
            pst.setString(4, prs);
            pst.setString(5, txtdetails.getText());
             String mn;
           mn = cmbmonth.getSelectedItem().toString();
            pst.setString(6, mn);
              String yar;
       yar = cmbyear.getSelectedItem().toString();
            pst.setString(7, yar);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Added Successfully");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
         serial.setText("");
        damount.setText("");
        ddate.setCalendar(null);
        cmbpurpose.setSelectedIndex(0);
        txtdetails.setText("");
        cmbmonth.setSelectedIndex(0);
          cmbyear.setSelectedIndex(0);

    }//GEN-LAST:event_resetActionPerformed

    private void tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableActionPerformed
         Connection con=null;
      Statement stm=null;
      ResultSet rs=null;

        try {
              String  da = new SimpleDateFormat("yyyy-MM-dd").format(ddate.getDate());
            Class.forName("com.mysql.jdbc.Driver");
           con = Connector.getConnection();
             stm = con.createStatement();
                rs = stm.executeQuery("select * from debitlist where DebitDate='"+da+"' ");
            DefaultTableModel model = (DefaultTableModel) debitTable.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                Object o[] = {rs.getString("Srl_no"),rs.getString("Amount"), rs.getString("DebitDate"), rs.getString("Purpose"), rs.getString("Details"),rs.getString("Month"),rs.getString("Year")};
                model.addRow(o);
            }

        } catch (Exception e) {
     
                 try {
            Class.forName("com.mysql.jdbc.Driver");
           con = Connector.getConnection();
             stm = con.createStatement();
                rs = stm.executeQuery("select * from debitlist  ");
            DefaultTableModel model = (DefaultTableModel) debitTable.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                Object o[] = {rs.getString("Srl_no"),rs.getString("Amount"), rs.getString("DebitDate"), rs.getString("Purpose"), rs.getString("Details"),rs.getString("Month"),rs.getString("Year")};
                model.addRow(o);
            }

        } catch (Exception f) {
            f.printStackTrace();
        }
        }
    }//GEN-LAST:event_tableActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
  Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = Connector.getConnection();
            int row =debitTable.getSelectedRow();
            String value = (debitTable.getModel().getValueAt(row, 0).toString());
            String query = "UPDATE  debitlist SET Amount=?, DebitDate=?, Purpose=?, Details=?,Month=?,Year=? where Srl_no=" + value;
            PreparedStatement pst = con.prepareStatement(query);
           
              pst.setString(1, damount.getText());
             SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String dater= sdf.format(ddate.getDate());
            pst.setString(2, dater);
            
            String purs;
           purs = cmbpurpose.getSelectedItem().toString();
            pst.setString(3,purs);
              pst.setString(4,txtdetails.getText());
                  String month;
          month = cmbmonth.getSelectedItem().toString();
            pst.setString(5, month);
              String yer;
         yer = cmbyear.getSelectedItem().toString();
            pst.setString(6,  yer);
            
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)debitTable.getModel();
            model.setRowCount(0);
            JOptionPane.showMessageDialog(null, "Updated Successfully");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateActionPerformed

    private void debitTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debitTableMouseClicked
        int i = debitTable.getSelectedRow();
        TableModel model = debitTable.getModel();
        serial.setText(model.getValueAt(i, 0).toString());
        damount.setText(model.getValueAt(i, 1).toString());
        try {
            int srow = debitTable.getSelectedRow();
            Date dat = new SimpleDateFormat("YYYY-MM-dd").parse((String) model.getValueAt(i, 2));
            ddate.setDate(dat);
        } catch (Exception e) {
        }
        String pur = model.getValueAt(i, 3).toString();
        switch (pur) {
            case " Teacher Payment ":
            cmbpurpose.setSelectedIndex(0);
            break;
            case " Office Equipments ":
            cmbpurpose.setSelectedIndex(1);
            break;
            case " Conveyance ":
            cmbpurpose.setSelectedIndex(2);
            break;
            case " Office Rent ":
            cmbpurpose.setSelectedIndex(3);
            break;
            case " Monthly Bills ":
            cmbpurpose.setSelectedIndex(4);
            break;
            case " Entertainment ":
            cmbpurpose.setSelectedIndex(5);
            break;
            case " Others ":
            cmbpurpose.setSelectedIndex(6);
            break;
        }

        txtdetails.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_debitTableMouseClicked

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
      if (cmbyear.getSelectedIndex() > 0 && cmbmonth.getSelectedIndex() > 0) {
       getMon();
            Connection con;
        Statement stm;
        ResultSet rs;
        
        try {
            
           
            con = Connector.getConnection();
            stm=con.createStatement();
  rs = stm.executeQuery("select * from debitlist where DebitDate like '"+mon+"%' ");
    DefaultTableModel model = (DefaultTableModel) debitTable.getModel();
            model.setRowCount(0);
            
        
            while (rs.next()) {
                
               Object p[] = {rs.getString("Srl_no"),rs.getString("Amount"), rs.getString("DebitDate"), rs.getString("Purpose"), rs.getString("Details"),rs.getString("Month"),rs.getString("Year")};
               model.addRow(p);
                
                
            }
            
            
            
            
        } catch (Exception e) {
            
            e.printStackTrace();
        }
    }
      
    
    }//GEN-LAST:event_monthActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        
                if (cmbyear.getSelectedIndex() > 0) {
       getYear();
            Connection con;
        Statement stm;
        ResultSet rs;
        
        try {
            
           
            con = Connector.getConnection();
            stm=con.createStatement();
  rs = stm.executeQuery("select * from debitlist where DebitDate like '"+mon+"%' ");
    DefaultTableModel model = (DefaultTableModel)debitTable.getModel();
            model.setRowCount(0);
            
        
            while (rs.next()) {
                
               Object p[] = {rs.getString("Srl_no"),rs.getString("Amount"), rs.getString("DebitDate"), rs.getString("Purpose"), rs.getString("Details"),rs.getString("Month"),rs.getString("Year")};
               model.addRow(p);
                
                
            }
            
            
            
            
        } catch (Exception e) {
            
            e.printStackTrace();
        }
    } 
    }//GEN-LAST:event_yearActionPerformed

    private void cmbyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbyearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbyearActionPerformed
   public void getMon(){
        int i=cmbmonth.getSelectedIndex();
        if(i<10){
        mon=cmbyear.getSelectedItem().toString()+"-"+"0"+Integer.toString(i);}
        else{ mon=cmbyear.getSelectedItem().toString()+"-"+Integer.toString(i);}
    }
     public void getYear(){
       
        mon=cmbyear.getSelectedItem().toString();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbmonth;
    private javax.swing.JComboBox<String> cmbpurpose;
    private javax.swing.JComboBox<String> cmbyear;
    private javax.swing.JTextField damount;
    private com.toedter.calendar.JDateChooser ddate;
    private javax.swing.JTable debitTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton month;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JTextField serial;
    private javax.swing.JButton table;
    private javax.swing.JTextArea txtdetails;
    private javax.swing.JButton update;
    private javax.swing.JButton year;
    // End of variables declaration//GEN-END:variables
}
